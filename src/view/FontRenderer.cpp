//
// Created by ethanscharlie on 6/7/25.
//

#include "FontRenderer.hpp"

#include <iostream>
#include <bits/ostream.tcc>


namespace View {
    std::pair<int, int> FontRenderer::calculateCharacterPosition(int index) {
        const int newXPos = position.first + (CHARPX_WIDTH + CHAR_PAD) * index;
        const std::pair<int, int> currentPosition = {newXPos, position.second};
        return currentPosition;
    }

    void FontRenderer::render8BitColumn(int bits, int row, std::pair<int, int> characterPosition) const {
        const int x = characterPosition.first;
        const int y = characterPosition.second;

        for (int col = 0; col < CHARPX_HEIGHT; col++) {
            if (!(bits & (1 << col))) {
                continue;
            }

            deviceIO->setPixel({x + row, y + col}, color);
        }
    }

    void FontRenderer::renderCharacterAtPosition(char c, std::pair<int, int> characterPosition) {
        const std::vector<int>& charmap = fontData[c];

        for (int row = 0; row < CHARPX_WIDTH; row++) {
            render8BitColumn(charmap[row], row, characterPosition);
        }

    }

    bool FontRenderer::characterIsRenderable(char c) {
        return fontData.contains(c);
    }

    void FontRenderer::renderText() {
        for (int i = 0; i < text.size(); i++) {
            char c = text[i];
            const std::pair<int, int> currentPosition = calculateCharacterPosition(i);

            if (characterIsRenderable(c)) {
                renderCharacterAtPosition(c, currentPosition);
                continue;
            }

            renderCharacterAtPosition(ALT_CHAR, currentPosition);
        }
    }

    FontRenderer::FontRenderer(IO::DeviceIO* deviceIO)
     : deviceIO(deviceIO) {
    }

    FontRenderer::FontRenderer(IO::DeviceIO* deviceIO, const std::string& text, std::pair<int, int> position)
     : deviceIO(deviceIO), text(text), position(position) {
    }

    std::map<char, std::vector<int>> FontRenderer::fontData = {{' ', {0x00, 0x00, 0x00, 0x00, 0x00}},
                        {'!', {0x00, 0x00, 0x5F, 0x00, 0x00}},
                        {'"', {0x00, 0x07, 0x00, 0x07, 0x00}},
                        {'#', {0x14, 0x7F, 0x14, 0x7F, 0x14}},
                        {'$', {0x24, 0x2A, 0x7F, 0x2A, 0x12}},
                        {'%', {0x23, 0x13, 0x08, 0x64, 0x62}},
                        {'&', {0x36, 0x49, 0x56, 0x20, 0x50}},
                        {'\'', {0x00, 0x08, 0x07, 0x03, 0x00}},
                        {'(', {0x00, 0x1C, 0x22, 0x41, 0x00}},
                        {')', {0x00, 0x41, 0x22, 0x1C, 0x00}},
                        {'*', {0x2A, 0x1C, 0x7F, 0x1C, 0x2A}},
                        {'+', {0x08, 0x08, 0x3E, 0x08, 0x08}},
                        {',', {0x00, 0x80, 0x70, 0x30, 0x00}},
                        {'-', {0x08, 0x08, 0x08, 0x08, 0x08}},
                        {'.', {0x00, 0x00, 0x60, 0x60, 0x00}},
                        {'/', {0x20, 0x10, 0x08, 0x04, 0x02}},
                        {'0', {0x3E, 0x51, 0x49, 0x45, 0x3E}},
                        {'1', {0x00, 0x42, 0x7F, 0x40, 0x00}},
                        {'2', {0x72, 0x49, 0x49, 0x49, 0x46}},
                        {'3', {0x21, 0x41, 0x49, 0x4D, 0x33}},
                        {'4', {0x18, 0x14, 0x12, 0x7F, 0x10}},
                        {'5', {0x27, 0x45, 0x45, 0x45, 0x39}},
                        {'6', {0x3C, 0x4A, 0x49, 0x49, 0x31}},
                        {'7', {0x41, 0x21, 0x11, 0x09, 0x07}},
                        {'8', {0x36, 0x49, 0x49, 0x49, 0x36}},
                        {'9', {0x46, 0x49, 0x49, 0x29, 0x1E}},
                        {':', {0x00, 0x00, 0x14, 0x00, 0x00}},
                        {';', {0x00, 0x40, 0x34, 0x00, 0x00}},
                        {'<', {0x00, 0x08, 0x14, 0x22, 0x41}},
                        {'=', {0x14, 0x14, 0x14, 0x14, 0x14}},
                        {'>', {0x00, 0x41, 0x22, 0x14, 0x08}},
                        {'?', {0x02, 0x01, 0x59, 0x09, 0x06}},
                        {'@', {0x3E, 0x41, 0x5D, 0x59, 0x4E}},
                        {'A', {0x7C, 0x12, 0x11, 0x12, 0x7C}},
                        {'B', {0x7F, 0x49, 0x49, 0x49, 0x36}},
                        {'C', {0x3E, 0x41, 0x41, 0x41, 0x22}},
                        {'D', {0x7F, 0x41, 0x41, 0x41, 0x3E}},
                        {'E', {0x7F, 0x49, 0x49, 0x49, 0x41}},
                        {'F', {0x7F, 0x09, 0x09, 0x09, 0x01}},
                        {'G', {0x3E, 0x41, 0x41, 0x51, 0x73}},
                        {'H', {0x7F, 0x08, 0x08, 0x08, 0x7F}},
                        {'I', {0x00, 0x41, 0x7F, 0x41, 0x00}},
                        {'J', {0x20, 0x40, 0x41, 0x3F, 0x01}},
                        {'K', {0x7F, 0x08, 0x14, 0x22, 0x41}},
                        {'L', {0x7F, 0x40, 0x40, 0x40, 0x40}},
                        {'M', {0x7F, 0x02, 0x1C, 0x02, 0x7F}},
                        {'N', {0x7F, 0x04, 0x08, 0x10, 0x7F}},
                        {'O', {0x3E, 0x41, 0x41, 0x41, 0x3E}},
                        {'P', {0x7F, 0x09, 0x09, 0x09, 0x06}},
                        {'Q', {0x3E, 0x41, 0x51, 0x21, 0x5E}},
                        {'R', {0x7F, 0x09, 0x19, 0x29, 0x46}},
                        {'S', {0x26, 0x49, 0x49, 0x49, 0x32}},
                        {'T', {0x03, 0x01, 0x7F, 0x01, 0x03}},
                        {'U', {0x3F, 0x40, 0x40, 0x40, 0x3F}},
                        {'V', {0x1F, 0x20, 0x40, 0x20, 0x1F}},
                        {'W', {0x3F, 0x40, 0x38, 0x40, 0x3F}},
                        {'X', {0x63, 0x14, 0x08, 0x14, 0x63}},
                        {'Y', {0x03, 0x04, 0x78, 0x04, 0x03}},
                        {'Z', {0x61, 0x59, 0x49, 0x4D, 0x43}},
                        {'[', {0x00, 0x7F, 0x41, 0x41, 0x41}},
                        {'\"', {0x02, 0x04, 0x08, 0x10, 0x20}},
                        {']', {0x00, 0x41, 0x41, 0x41, 0x7F}},
                        {'^', {0x04, 0x02, 0x01, 0x02, 0x04}},
                        {'_', {0x40, 0x40, 0x40, 0x40, 0x40}},
                        {'`', {0x00, 0x03, 0x07, 0x08, 0x00}},
                        {'a', {0x20, 0x54, 0x54, 0x78, 0x40}},
                        {'b', {0x7F, 0x28, 0x44, 0x44, 0x38}},
                        {'c', {0x38, 0x44, 0x44, 0x44, 0x28}},
                        {'d', {0x38, 0x44, 0x44, 0x28, 0x7F}},
                        {'e', {0x38, 0x54, 0x54, 0x54, 0x18}},
                        {'f', {0x00, 0x08, 0x7E, 0x09, 0x02}},
                        {'g', {0x18, 0xA4, 0xA4, 0x9C, 0x78}},
                        {'h', {0x7F, 0x08, 0x04, 0x04, 0x78}},
                        {'i', {0x00, 0x44, 0x7D, 0x40, 0x00}},
                        {'j', {0x20, 0x40, 0x40, 0x3D, 0x00}},
                        {'k', {0x7F, 0x10, 0x28, 0x44, 0x00}},
                        {'l', {0x00, 0x41, 0x7F, 0x40, 0x00}},
                        {'m', {0x7C, 0x04, 0x78, 0x04, 0x78}},
                        {'n', {0x7C, 0x08, 0x04, 0x04, 0x78}},
                        {'o', {0x38, 0x44, 0x44, 0x44, 0x38}},
                        {'p', {0xFC, 0x18, 0x24, 0x24, 0x18}},
                        {'q', {0x18, 0x24, 0x24, 0x18, 0xFC}},
                        {'r', {0x7C, 0x08, 0x04, 0x04, 0x08}},
                        {'s', {0x48, 0x54, 0x54, 0x54, 0x24}},
                        {'t', {0x04, 0x04, 0x3F, 0x44, 0x24}},
                        {'u', {0x3C, 0x40, 0x40, 0x20, 0x7C}},
                        {'v', {0x1C, 0x20, 0x40, 0x20, 0x1C}},
                        {'w', {0x3C, 0x40, 0x30, 0x40, 0x3C}},
                        {'x', {0x44, 0x28, 0x10, 0x28, 0x44}},
                        {'y', {0x4C, 0x90, 0x90, 0x90, 0x7C}},
                        {'z', {0x44, 0x64, 0x54, 0x4C, 0x44}}};
} // View

